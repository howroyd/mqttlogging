version = 1
disable_existing_loggers = false

[formatters.simple]
format = "[%(levelname)s|%(module)s|L%(lineno)d|%(threadName)s] %(asctime)s: %(message)s"
datefmt = "%Y-%m-%dT%H:%M:%S%z"

[formatters.json]
"()" = "formatters.JsonFormatter"
[formatters.json.fmt_keys]
level = "levelname"
message = "message"
timestamp = "timestamp"
# logger = "name"
filename = "filename"
module = "module"
function = "funcName"
line = "lineno"
# thread_name = "threadName"

[filters.nonerrorfilter]
"()" = "filters.NonErrorFilter"
maxlevel = "INFO"

[handlers.console_stderr]
class = "logging.StreamHandler"
level = "WARNING"
formatter = "simple"
stream = "ext://sys.stderr"

[handlers.console_stdout]
class = "logging.StreamHandler"
level = "DEBUG"
formatter = "simple"
stream = "ext://sys.stdout"
filters = ["nonerrorfilter"]

[handlers.file_text]
class = "handlers.RotatingFileHandler"
level = "DEBUG"
formatter = "json"
filename = "logs/log.jsonl"
maxBytes = 10_000
backupCount = 3
encoding = "UTF-8"

[handlers.mqtt_error]
class = "handlers.MqttHandler"
level = "WARNING"
formatter = "json"
#filters = ["nonerrorfilter"]
[handlers.mqtt_error.mqtt_config]
topic = "test/logs"
host = "96.69.1.254"
# username = "myusername"
# password = "mypassword"

[handlers.queue_listener_handler]
"()" = "handlers.QueueListenerHandler"
handlers = [
    "cfg://handlers.console_stdout",
    "cfg://handlers.console_stderr",
    "cfg://handlers.mqtt_error",
    "cfg://handlers.file_text",
]
level = "DEBUG"

[loggers.""]
level = "INFO"
handlers = ["queue_listener_handler"]
